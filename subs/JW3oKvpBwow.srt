1
00:00:00,000 --> 00:00:00,570


2
00:00:00,570 --> 00:00:03,960
Hello, I'm Aly Cabral, a product
manager on the core server.

3
00:00:03,960 --> 00:00:06,720
And welcome to the
transactions lessons.

4
00:00:06,720 --> 00:00:09,930
With snapshot isolation and
all-or-nothing execution,

5
00:00:09,930 --> 00:00:13,470
transactions extend MongoDB's
ACID data guarantees

6
00:00:13,470 --> 00:00:15,690
to multiple statements
and multiple documents

7
00:00:15,690 --> 00:00:18,690
across one or many collections.

8
00:00:18,690 --> 00:00:20,280
They feel just like
the transactions

9
00:00:20,280 --> 00:00:22,620
you're familiar with from
relational databases.

10
00:00:22,620 --> 00:00:25,200
They're easy to add to any
application that needs them,

11
00:00:25,200 --> 00:00:27,720
and they do not impact the
performance of workloads

12
00:00:27,720 --> 00:00:29,690
that don't require them.

13
00:00:29,690 --> 00:00:31,410
With multi-document
transactions,

14
00:00:31,410 --> 00:00:35,280
it's easier than ever for you to
address a complete range of use

15
00:00:35,280 --> 00:00:37,500
cases with MongoDB.

16
00:00:37,500 --> 00:00:40,670
And MongoDB 4.0 transactions
work across replica sets.

17
00:00:40,670 --> 00:00:42,390
And transactions
across sharded clusters

18
00:00:42,390 --> 00:00:45,600
are scheduled for MongoDB 4.2.

19
00:00:45,600 --> 00:00:48,060
Unlike legacy
relational databases,

20
00:00:48,060 --> 00:00:50,100
document databases
are different.

21
00:00:50,100 --> 00:00:52,710
Rather than break related
data apart and spread it

22
00:00:52,710 --> 00:00:55,380
across multiple
parent-child tables,

23
00:00:55,380 --> 00:00:58,200
documents can store
related data together

24
00:00:58,200 --> 00:01:01,560
in a single, rich,
strongly-typed structure using

25
00:01:01,560 --> 00:01:03,720
subdocuments and
arrays to collapse

26
00:01:03,720 --> 00:01:07,980
those parent-child tables
into a single document.

27
00:01:07,980 --> 00:01:11,520
Up until 4.0, MongoDB has
provided ACID guarantees

28
00:01:11,520 --> 00:01:13,250
at the document level.

29
00:01:13,250 --> 00:01:14,910
The guarantees
provided by MongoDB

30
00:01:14,910 --> 00:01:18,900
ensure complete isolation
as the document is updated.

31
00:01:18,900 --> 00:01:20,820
Any errors cause the
operation to roll

32
00:01:20,820 --> 00:01:25,530
back so that clients receive
a consistent view of the data.

33
00:01:25,530 --> 00:01:27,600
With this design,
application owners

34
00:01:27,600 --> 00:01:31,770
get all the same data integrity
guarantees as those provided

35
00:01:31,770 --> 00:01:35,010
by legacy relational databases.

36
00:01:35,010 --> 00:01:37,170
These single document
guarantees are often

37
00:01:37,170 --> 00:01:39,360
sufficient for
most applications.

38
00:01:39,360 --> 00:01:41,970
However, MongoDB
4.0, with the support

39
00:01:41,970 --> 00:01:45,450
of multi-document transactions,
makes it easier than ever

40
00:01:45,450 --> 00:01:48,820
to develop anything
against MongoDB.

41
00:01:48,820 --> 00:01:52,020
In this chapter, we'll get
a feel for the transaction

42
00:01:52,020 --> 00:01:54,750
syntax, dive into the
use cases, and go over

43
00:01:54,750 --> 00:01:57,350
production considerations.